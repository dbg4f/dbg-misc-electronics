<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:config.properties"/>
    </bean>

    <bean id="rangeByte" class="dbg.electronics.robodrv.Range">
        <constructor-arg index="0" value="0" type="int"/>
        <constructor-arg index="1" value="255" type="int"/>
    </bean>

    <bean id="rangeMinute" class="dbg.electronics.robodrv.Range">
        <constructor-arg index="0" value="0" type="int"/>
        <constructor-arg index="1" value="60000" type="int"/>
    </bean>

    <bean id="range5Sec" class="dbg.electronics.robodrv.Range">
        <constructor-arg index="0" value="0" type="int"/>
        <constructor-arg index="1" value="5000" type="int"/>
    </bean>

    <bean id="statCounters" class="dbg.electronics.robodrv.head.stat.Statistics">
    </bean>


    <bean id="testValue1" class="dbg.electronics.robodrv.graphics.ValueWithHistory">
        <property name="valueFormatString" value="%d"/>
        <property name="valueRange" ref="rangeByte"/>
        <property name="name"       value="Test Value 1"/>
    </bean>

    <bean id="testValue2" class="dbg.electronics.robodrv.graphics.ValueWithHistory">
        <property name="valueFormatString" value="%d"/>
        <property name="valueRange" ref="rangeByte"/>
        <property name="name"       value="Test Value 2"/>
    </bean>


    <bean id="driveState" class="dbg.electronics.robodrv.drive.DriveState">
        <property name="sampleValueWithHistory" ref="testValue1"/>
        <property name="sampleValueWithHistory2" ref="testValue2"/>
        <property name="headController" ref="headController"/>
    </bean>


    <import resource="robodrv-testing.xml"/>
    <import resource="robodrv-graphics.xml"/>
    <import resource="robodrv-input.xml"/>


    <bean id="mcuSocketCommunicator" class="dbg.electronics.robodrv.mcu.McuSocketCommunicator">
        <constructor-arg index="0"      value="${mcuCommunicationHost}"/>
        <constructor-arg index="1"      value="${mcuCommunicationPort}"/>
        <property name="bytesListener"  ref="mcuReportDecoder"/>
        <property name='statistics'      ref="statCounters"/>
    </bean>


    <bean id="mcuCommunicationController" class="dbg.electronics.robodrv.mcu.CommunicationController">
        <property name="socketCommunicator" ref="mcuSocketCommunicator"/>
        <property name="statusListener"     value="#{driveState.channelStatusUpdater}"/>
    </bean>

    <bean id="synchronousExecutor" class="dbg.electronics.robodrv.mcu.SynchronousExecutor">
        <property name="bytesWriter" ref="mcuSocketCommunicator"/>
        <property name="nextListener" ref="driveState"/>
    </bean>

    <bean id="mcuRegisterAccess" class="dbg.electronics.robodrv.mcu.McuRegisterAccess">
        <constructor-arg ref="synchronousExecutor"/>
    </bean>

    <bean id="mcuReportDecoder" class="dbg.electronics.robodrv.mcu.McuReportDecoder">
        <property name="reportListener" ref="synchronousExecutor"/>
        <property name="statusListener" value="#{driveState.protocolStateUpdater}"/>
    </bean>

    <bean id="orchestrator" class="dbg.electronics.robodrv.head.Orchestrator">
        <property name="threads">
            <list>
                <ref bean="hidEventFileReader"/>
                <ref bean="bufferedScreen"/>
                <ref bean="testDataGenerator"/>
                <!--
                <ref bean="mcuSocketCommunicator"/>
                -->
                <ref bean="mcuCommunicationController"/>
            </list>
        </property>
        <property name="stickX" ref="testValueStickX"/>
        <property name="stickY" ref="testValueStickY"/>
    </bean>

    <bean id="headController" class="dbg.electronics.robodrv.head.HeadController" init-method="init">
    </bean>

    <bean id="steeringAngleParamAccessor" class="dbg.electronics.robodrv.head.TargetParameterAccessor">
        <property name="headController"     ref="headController"/>
        <property name="type"               value="STEERING_ANGLE"/>
    </bean>

    <bean id="encoderSteeringParamAccessor" class="dbg.electronics.robodrv.head.TargetParameterAccessor">
        <property name="headController"     ref="headController"/>
        <property name="type"               value="STEERING_ANGLE"/>
    </bean>

    <bean id="powerCurrentParamAccessor" class="dbg.electronics.robodrv.head.TargetParameterAccessor">
        <property name="headController"     ref="headController"/>
        <property name="type"               value="POWER_CURRENT"/>
    </bean>

    <bean id="targetMotionSpeedParamAccessor" class="dbg.electronics.robodrv.head.TargetParameterAccessor">
        <property name="headController"     ref="headController"/>
        <property name="type"               value="MOTION_SPEED"/>
    </bean>

    <bean id="drive" class="dbg.electronics.robodrv.drive.M16MultichannelPwmDrive">
        <constructor-arg ref="synchronousExecutor"/>
    </bean>



</beans>